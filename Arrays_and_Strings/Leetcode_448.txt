//bruteforce


class Solution(object):
    def findDisappearedNumbers(self, nums):
        n=len(nums)
        ans=[]
        for i in range(1,n+1):
            flag=0
            for j in range(0,n):
                if(nums[j]==i):
                    flag=1
                    break
            if(not flag):
                ans.append(i)
        return ans

//optimized approach 1

class Solution(object):
    def findDisappearedNumbers(self, nums):
        nums.sort()
        n=len(nums)
        res=[]
        def BinarySearch(arr,target):
            left,right=0,len(arr)-1
            while left<=right:
                mid=(left+right)//2
                if(arr[mid]==target):
                    return True
                elif(arr[mid]>target):
                    right=mid-1
                else:
                    left=mid+1
            return False
        for i in range(1,n+1):
            if not BinarySearch(nums,i):
                res.append(i)
        return res
        
                    

//optimized approach 2
class Solution(object):
    def findDisappearedNumbers(self, nums):
        n=len(nums)
        for i in range(n):
            index=abs(nums[i])-1
            nums[index]=-abs(nums[index])
        res=[]
        for i in range(n):
            if(nums[i]>0):
                res.append(i+1)   
        return res
                       
        
                    
    
        